// Runtime 279 ms Beats 67.68% || Memory 66.7 MB Beats 49.50%

var findingUsersActiveMinutes = function(logs, k) {
    logs.sort( (a,b) => a[0] - b[0] )

    let map = {}
    for( let [id, min] of logs ){
        if( !map[id] ){
            map[id] = new Set()
        }
        map[id].add(min)
    }

    let result = new Array(k).fill(0)

    for( let id in map ){
        let count = map[id].size
        result[count-1]++
    }

    return result

}


// Runtime 5362 ms Beats 5.5% || Memory 65.9 MB Beats 67.68%

var findingUsersActiveMinutes = function(logs, k) {
    
    let map = {}
    for( let el of logs ){
        if( map[el[0]] && map[el[0]].includes(el[1]) ){
            continue
        } else if( map[el[0]] ){
            map[el[0]].push(el[1])
        } else {
            map[el[0]] = [el[1]]
        }
    }

    for( let el in map ){
        map[el] = map[el].length
    }

    let result = []
    let test = Object.values(map)
    for( let i = 0; i < k; i++ ){
        result.push(0 + test.filter(el => el === i + 1).length)
    } 
    
    return result
};
