// Runtime 92 ms Beats 64.12% || Memory 45.4 MB Beats 5.81%

var insertionSortList = function( head ){
    let vals = []
    while( head ){
        vals.push(head.val)
        head = head.next
    }

    vals = insertionSort(vals)
    let node = tail = new ListNode()
    for( let val of vals ){
        tail.next = new ListNode(val)
        tail = tail.next
    }
    return node.next
}

var insertionSort = function( nums ){
    for( let i = 1; i < nums.length; i++ ){
        let current = nums[i]
        let j = i - 1
        while( j >= 0 && nums[j] > current ){
            nums[j + 1] = nums[j]
            j--
        }
        nums[j + 1] = current
    }
    return nums
}

// Runtime 111 ms Beats 40.94% || Memory 44.8 MB Beats 40.35%

var insertionSortList = function(head){
    if( !head ) return null
    let sorted = head
    head = head.next
    sorted.next = null
    while( head ){
        let prev = null
        let node = sorted
        while( node && head.val > node.val ){
            prev = node
            node = node.next
        }
        let insert = head
        head = head.next
        insert.next = node
        if( prev ){
            prev.next = insert
        } else {
            sorted = insert
        }
    }
    return sorted
}
