// Runtime 103 ms Beats 97.37% || Memory 50 MB Beats 73.68%

var wallsAndGates = function(rooms) {
    const rows = rooms.length
    if( rows === 0 ) return 
    const cols = rooms[0].length
    if( cols === 0 ) return

    const walk = (i, j, distance) => {
        const queue = [[i,j,distance]]

        let head;

        while( head = queue.shift() ){
            const [i,j, distance] = head

            if( rooms[i][j] > distance || rooms[i][j] === 0 ){
                rooms[i][j] = distance
            

                const nextDistance = distance + 1

                if( i > 0 && rooms[i - 1][j] > nextDistance ){
                    queue.push( [i - 1, j, nextDistance] )
                }
                if( i + 1 < rows && rooms[i + 1][j] > nextDistance){
                    queue.push( [i + 1, j, nextDistance] )
                }
                if( j > 0 && rooms[i][j - 1] > nextDistance ){
                    queue.push( [i, j - 1, nextDistance] )
                }
                if( j + 1 < cols && rooms[i][j + 1] > nextDistance ){
                    queue.push([i, j + 1, nextDistance])
                }
            }
        }
    }


    for( let i = 0; i < rows; i++ ){
        for( let j = 0; j < cols; j++ ){
            if( rooms[i][j] === 0 ){
                walk(i, j, 0)
            }
        }
    }

    return rooms
};
