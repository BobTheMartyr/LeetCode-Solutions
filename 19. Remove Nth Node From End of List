// Runtime 55 ms Beats 93.61% || Memory 43 MB Beats 38.69%


var removeNthFromEnd = function(head, n){
    let fast = head, slow = head
    
    // Sets the first pointer n nodes apart from the second
    for( let i = 0; i < n; i++ ){
        fast = fast.next
    }
    
    if( !fast ){
        return head.next
    }

    while( fast.next ){
        fast = fast.next
        slow = slow.next
    }

    slow.next = slow.next.next
    return head
}




// Runtime 58 ms Beats 87.49% || Memory 43.4 MB Beats 26.7%


var removeNthFromEnd = function(head, n) {
    
    let length = 0
    let vals = []
    while( head ){
        length++
        vals.push(head.val)
        head = head.next
    }
    
    let nodeToRemove = length - n

    let front = end = new ListNode()
    for( let i = 0; i < vals.length; i++ ){
        if( i != nodeToRemove ){
            end.next = new ListNode(vals[i])
            end = end.next
        }
    }
    return front.next
};
