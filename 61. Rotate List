// Runtime 65 ms Beats 81.2% || Memory 43.6 MB Beats 88.57%

var rotateRight = function(head, k){
    if( !head || !head.next ){return head}

    let node = head
    let len = 0
    while( node != null ){
        node = node.next
        len++
    }

    let rots = k%len
    let curr = head.next
    let prev = head

    for( let i = 0; i < rots; i++ ){
        while( curr.next != null ){
            prev = curr
            curr = curr.next
        }
        prev.next = null
        curr.next = head
        head = curr
    }

    return head
}




// Runtime 79 ms Beats 23.75% || Memory 44.4 MB Beats 21.98%

var rotateRight = function(head, k) {
    
    if( !head || !head.next ){
        return head
    }

    let sentinel = new ListNode()
    sentinel.next = head
    
    let lengthNode = head
    let len = 0
    while( lengthNode != null ){
        lengthNode = lengthNode.next
        len++
    }

    if( len >= k){
        for( let i = 0; i < k; i++ ){
            let curr = sentinel.next.next
            let prev = sentinel.next
            while( curr.next != null ){
                curr = curr.next
                prev = prev.next
            }
            curr.next = sentinel.next
            sentinel.next = curr
            prev.next = null
        }
    }
    if( len < k ){
        let rots = k % len
        for( let i = 0; i < rots; i++ ){
            let curr = sentinel.next.next
            let prev = sentinel.next
            while( curr.next != null ){
                curr = curr.next
                prev = prev.next
            }
            curr.next = sentinel.next
            sentinel.next = curr
            prev.next = null
        }
    }
    return sentinel.next
};
