//Third solution - slightly slower than second but less space intensive

var sortPeople = function(names, heights) {
    let personMap = new Map()
    for( let person in names ){
        personMap.set(heights[person], names[person])
    }
    heights.sort((a,b) => b - a)
    return heights.map(el => personMap.get(el))
};



//Second solution - faster but more space intensive

var sortPeople = function(names, heights) {
    let personMap = new Map()
    for( let person in names ){
        personMap.set(heights[person], names[person])
    }

    let results = []
    for( let height in heights.sort((a,b) => b - a) ){
        results.push(personMap.get(heights[height]))
    }
    return results
};


//First solution - Brute force to make it work

var sortPeople = function(names, heights){

    let combination = []
    for( let i = 0; i < names.length; i++ ){
        combination.push( [names[i], heights[i]] )
    }

    heights = heights.sort((a,b) => b - a)
    
    let results = []
    for( let i = 0; i < heights.length; i++ ){
        for( let j = 0; j < combination.length; j++ ){
            if( combination[j].includes(heights[i]) ){
                results.push(combination[j][0])
            }
        }
    }
    return results

}
